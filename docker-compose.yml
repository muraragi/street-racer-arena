version: "3.8"

services:
  caddy:
    image: caddy:latest
    container_name: caddy_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    image: muraragi/street-racing-arena-backend:latest
    container_name: backend_app
    restart: unless-stopped
    expose:
      - "8080"
    environment:
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_SSLMODE=disable
      - DB_TIMEZONE=Europe/Moscow
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
    depends_on:
      - postgres_db

  frontend:
    build:
      context: ./apps/frontend  
      dockerfile: Dockerfile
    environment:
      - NUXT_API_URL=${NUXT_API_URL}
    image: muraragi/street-racing-arena-frontend:latest
    container_name: frontend_app
    restart: unless-stopped
    expose:
      - "3000"

  postgres_db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

volumes:
  caddy_data:
  caddy_config:
  postgres_data:

